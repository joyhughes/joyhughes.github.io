(function(){"use strict";async function l(s){const n=s.stream(),t=new CompressionStream("gzip"),o=n.pipeThrough(t);return(await new Response(o).blob()).size}async function p(s,n){const t=new Blob([s,n]);return await l(t)}async function m(s){const n=new Blob([s]);return await l(n)}function f(s,n,t){return(t-Math.min(s,n))/Math.max(s,n)}self.onmessage=async function(s){const{labels:n,contents:t}=s.data,o=t.length,a=new Array(o),c=Array.from({length:o},()=>Array(o).fill(0));for(let e=0;e<o;e++)a[e]=await m(t[e]);for(let e=0;e<o;e++)for(let r=e;r<o;r++){let i=0;if(e!==r){const u=await p(t[e],t[r]);i=f(a[e],a[r],u)}c[e][r]=i,c[r][e]=i,self.postMessage({type:"progress",i:e,j:r,value:i})}self.postMessage({type:"result",labels:n,ncdMatrix:c})}})();
